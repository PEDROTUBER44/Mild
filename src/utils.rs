use std::process::Command;

pub fn utils_fedora() {

    Command::new("dnf")
        .args(Some("install"))
        .args(Some("https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-35.noarch.rpm"))
        .args(Some("https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-35.noarch.rpm"))
        .args(Some("-y"))
        .status()
        .expect("Error enabling rpmfusion repository");

    Command::new("dnf")
        .args(Some("update"))
        .args(Some("-y"))
        .status()
        .expect("Error updating fedora 35");

    Command::new("dnf")
        .args(Some("install"))
        .args(Some("@base-x"))
        .args(Some("unrar"))
        .args(Some("p7zip"))
        .args(Some("zip"))
        .args(Some("unzip"))
        .args(Some("NetworkManager"))
        .args(Some("fedora-workstation-backgrounds"))
        .args(Some("firefox"))
        .args(Some("exfat-utils"))
        .args(Some("gvfs-mtp"))
        .args(Some("gvfs-goa"))
        .args(Some("system-config-printer"))
        .args(Some("-y"))
        .status()
        .expect("Error installing fedora 34 utilities");

    Command::new("systemctl")
        .args(Some("enable"))
        .args(Some("NetworkManager"))
        .args(Some("-f"))
        .status()
        .expect("Error starting NetworkManager at startup");
}

pub fn utils_debian() {

    Command::new("apt")
        .args(Some("install"))
        .args(Some("sudo"))
        .args(Some("zip"))
        .args(Some("unzip"))
        .args(Some("unrar-free"))
        .args(Some("network-manager"))
        .args(Some("xorg"))
        .args(Some("firefox-esr"))
        .args(Some("gvfs"))
        .args(Some("pulseaudio"))
        .args(Some("exfat-utils"))
        .args(Some("p7zip-full"))
        .args(Some("system-config-printer"))
        .args(Some("adwaita-icon-theme"))
        .args(Some("-y"))
        .status()
        .expect("Error installing debian utilities 11");

    Command::new("systemctl")
        .args(Some("enable"))
        .args(Some("NetworkManager"))
        .args(Some("-f"))
        .status()
        .expect("Error enabling NetworkManager on startup");

}

pub fn utils_archlinux() {

    Command::new("pacman")
        .args(Some("-Syu"))
        .args(Some("--noconfirm"))
        .status()
        .expect("Error updating system");

    Command::new("pacman")
        .args(Some("-Sy"))
        .args(Some("xorg"))
        .args(Some("networkmanager"))
        .args(Some("gvfs-mtp"))
        .args(Some("gvfs-goa"))
        .args(Some("gvfs-google"))
        .args(Some("exfat-utils"))
        .args(Some("p7zip"))
        .args(Some("firefox"))
        .args(Some("zip"))
        .args(Some("unzip"))
        .args(Some("unrar"))
        .args(Some("system-config-printer"))
        .args(Some("adwaita-icon-theme"))
        .args(Some("xf86-video-intel"))
        .args(Some("libgl"))
        .args(Some("mesa"))
        .args(Some("nvidia"))
        .args(Some("nvidia-libgl"))
        .args(Some("xf86-video-amdgpu"))
        .args(Some("--noconfirm"))
        .status()
        .expect("Error installing archlinux utilities");

    Command::new("systemctl")
        .args(Some("enable"))
        .args(Some("NetworkManager"))
        .args(Some("-f"))
        .status()
        .expect("Error starting NetworkManager at startup");

}

pub fn remove_fedora() {

    Command::new("dnf")
        .args(Some("remove"))
        .args(Some("@lxde-desktop"))
        .args(Some("lxappearance"))
        .args(Some("lxde-common"))
        .args(Some("lxdm"))
        .args(Some("lxinput"))
        .args(Some("lxmenu-data"))
        .args(Some("lxpanel"))
        .args(Some("lxpolkit"))
        .args(Some("lxrandr"))
        .args(Some("xcompmgr"))
        .args(Some("xarchiver"))
        .args(Some("lxsession"))
        .args(Some("lxtask"))
        .args(Some("pcmanfm"))
        .args(Some("lxterminal"))
        .args(Some("network-manager-applet"))
        .args(Some("openbox"))
        .args(Some("obconf"))
        .args(Some("lightdm-gtk-greeter"))
        .args(Some("lightdm"))
        .args(Some("@plasma-desktop"))
        .args(Some("sddm"))
        .args(Some("plasma-desktop"))
        .args(Some("plasma-nm"))
        .args(Some("konsole"))
        .args(Some("kcm_colors"))
        .args(Some("kcm-fcitx"))
        .args(Some("kscreen"))
        .args(Some("ksysguard"))
        .args(Some("spectacle"))
        .args(Some("plasma-user-manager"))
        .args(Some("dolphin"))
        .args(Some("plasma-discover"))
        .args(Some("@gnome-desktop"))
        .args(Some("gdm"))
        .args(Some("gnome-shell"))
        .args(Some("nautilus"))
        .args(Some("gnome-terminal"))
        .args(Some("fedora-workstation-backgrounds"))
        .args(Some("file-roller"))
        .args(Some("gnome-terminal-nautilus"))
        .args(Some("@cinnamon-desktop"))
        .args(Some("cinnamon"))
        .args(Some("cinnamon-control-center"))
        .args(Some("cinnamon-desktop"))
        .args(Some("cinnamon-menus"))
        .args(Some("cinnamon-screensaver"))
        .args(Some("cinnamon-session"))
        .args(Some("nemo"))
        .args(Some("nemo-fileroller"))
        .args(Some("cinnamon-translations"))
        .args(Some("cjs"))
        .args(Some("muffin"))
        .args(Some("gnome-terminal"))
        .args(Some("@lxqt-desktop"))
        .args(Some("breeze-cursor-theme"))
        .args(Some("breeze-gtk"))
        .args(Some("breeze-icon-theme"))
        .args(Some("firewall-config"))
        .args(Some("network-manager-applet"))
        .args(Some("notification-daemon"))
        .args(Some("obconf"))
        .args(Some("openbox"))
        .args(Some("pcmanfm-qt"))
        .args(Some("qterminal"))
        .args(Some("lxqt-about"))
        .args(Some("lxqt-archiver"))
        .args(Some("lxqt-config"))
        .args(Some("lxqt-notificationd"))
        .args(Some("lxqt-openssh-askpass"))
        .args(Some("lxqt-panel"))
        .args(Some("lxqt-policykit"))
        .args(Some("lxqt-powermanagement"))
        .args(Some("lxqt-qtplugin"))
        .args(Some("lxqt-session"))
        .args(Some("lxqt-themes"))
        .args(Some("lxqt-themes-fedora"))
        .args(Some("@xfce-desktop"))
        .args(Some("network-manager-applet"))
        .args(Some("xfwm4"))
        .args(Some("xfce4-power-manager"))
        .args(Some("xfce4-session"))
        .args(Some("xfce4-settings"))
        .args(Some("xfce4-whiskermenu-plugin"))
        .args(Some("xfdesktop"))
        .args(Some("xfce4-terminal"))
        .args(Some("@mate-desktop"))
        .args(Some("mate-control-center"))
        .args(Some("mate-desktop"))
        .args(Some("mate-power-manager"))
        .args(Some("mate-screensaver"))
        .args(Some("mate-screenshot"))
        .args(Some("mate-session-manager"))
        .args(Some("mate-settings-daemon"))
        .args(Some("mate-terminal"))
        .args(Some("network-manager-applet"))
        .args(Some("mate-panel"))
        .args(Some("marco"))
        .args(Some("caja"))
        .args(Some("-y")
        .status()
        .expect("Error removing graphical environments and their dependencies");

    Command::new("systemctl")
        .args(Some("disable"))
        .args(Some("sddm"))
        .args(Some("-f"))
        .status()
        .expect("Error removing sddm login screen");

    Command::new("systemctl")
        .args(Some("disable"))
        .args(Some("lightdm"))
        .args(Some("-f"))
        .status()
        .expect("Error removing sddm login screen");

    Command::new("systemctl")
        .args(Some("disable"))
        .args(Some("gdm"))
        .args(Some("-f"))
        .status()
        .expect("Error removing sddm login screen");

}

pub fn remove_arch() {

    Command::new("pacman")
        .args(Some("-Rsn"))
        .args(Some("lxde"))
        .args(Some("lightdm"))
        .args(Some("lightdm-gtk-greeter"))
        .args(Some("adwaita-icon-theme"))
        .args(Some("xarchiver"))
        .args(Some("lxqt"))
        .args(Some("xfce4-settings"))
        .args(Some("xfce4-pulseaudio-plugin"))
        .args(Some("exo"))
        .args(Some("garcon"))
        .args(Some("tumbler"))
        .args(Some("xfce4-panel"))
        .args(Some("xfce4-session"))
        .args(Some("xfce4-whiskermenu-plugin"))
        .args(Some("xfce4-terminal"))
        .args(Some("xfconf"))
        .args(Some("xfdesktop"))
        .args(Some("xfwm4"))
        .args(Some("thunar"))
        .args(Some("file-roller"))
        .args(Some("gdm"))
        .args(Some("weston"))
        .args(Some("gnome-session"))
        .args(Some("gnome-terminal"))
        .args(Some("nautilus-terminal"))
        .args(Some("nautilus"))
        .args(Some("gnome-control-center"))
        .args(Some("gedit"))
        .args(Some("eog"))
        .args(Some("evince"))
        .args(Some("cinnamon"))
        .args(Some("cinnamon-session"))
        .args(Some("cinnamon-desktop"))
        .args(Some("gnome-terminal"))
        .args(Some("cinnamon-control-center"))
        .args(Some("cinnamon-menus"))
        .args(Some("cinnamon-screensaver"))
        .args(Some("cinnamon-settings-daemon"))
        .args(Some("cinnamon-translations"))
        .args(Some("cjs"))
        .args(Some("muffin"))
        .args(Some("nemo"))
        .args(Some("nemo-fileroller"))
        .args(Some("mate-control-center"))
        .args(Some("mate-desktop"))
        .args(Some("mate-power-manager"))
        .args(Some("mate-screensaver"))
        .args(Some("mate-common"))
        .args(Some("mate-session-manager"))
        .args(Some("mate-settings-daemon"))
        .args(Some("mate-terminal"))
        .args(Some("mate-panel"))
        .args(Some("marco"))
        .args(Some("caja"))
        .args(Some("sddm"))
        .args(Some("plasma-desktop"))
        .args(Some("plasma-nm"))
        .args(Some("konsole"))
        .args(Some("plasma-wayland-session"))
        .args(Some("kcm-fcitx"))
        .args(Some("kscreen"))
        .args(Some("ksysguard"))
        .args(Some("spectacle"))
        .args(Some("dolphin"))
        .args(Some("discover"))
        .args(Some("--noconfirm"))
        .status()
        .expect("error removing all graphical environments");

    Command::new("systemctl")
        .args(Some("disable"))
        .args(Some("gdm"))
        .args(Some("-f"))
        .status()
        .expect("Error disabling gdm on startup");

    Command::new("systemctl")
        .args(Some("disable"))
        .args(Some("lightdm"))
        .args(Some("-f"))
        .status()
        .expect("Error disabling lightdm on startup");

    Command::new("systemctl")
        .args(Some("disable"))
        .args(Some("sddm"))
        .args(Some("-f"))
        .status()
        .expect("Error disabling sddm on startup");

}

pub fn remove_debian() {

    Command::new("apt")
        .args(Some("remove"))
        .args(Some("lightdm"))
        .args(Some("lightdm-gtk-greeter"))
        .args(Some("lxde-core"))
        .args(Some("lxterminal"))
        .args(Some("lxappearance"))
        .args(Some("pavucontrol"))
        .args(Some("lxsession-default-apps"))
        .args(Some("xscreensaver"))
        .args(Some("policykit-1"))
        .args(Some("xarchiver"))
        .args(Some("lxqt-core"))
        .args(Some("pavucontrol"))
        .args(Some("thunar"))
        .args(Some("xfce4-panel"))
        .args(Some("xfce4-pulseaudio-plugin"))
        .args(Some("xfce4-whiskermenu-plugin"))
        .args(Some("xfce4-session"))
        .args(Some("xfce4-settings"))
        .args(Some("xfce4-terminal"))
        .args(Some("xfconf"))
        .args(Some("xfdesktop4"))
        .args(Some("xfwm4"))
        .args(Some("adwaita-qt"))
        .args(Some("qt5ct"))
        .args(Some("gdm3"))
        .args(Some("gnome-session"))
        .args(Some("gnome-control-center"))
        .args(Some("gnome-terminal"))
        .args(Some("gnome-tweaks"))
        .args(Some("nautilus"))
        .args(Some("adwaita-icon-theme"))
        .args(Some("cinnamon-core"))
        .args(Some("marco"))
        .args(Some("mate-desktop-environment-core"))
        .args(Some("dolphin"))
        .args(Some("kwrite"))
        .args(Some("ark"))
        .args(Some("kde-spectacle"))
        .args(Some("okular"))
        .args(Some("ksysguard"))
        .args(Some("plasma-discover"))
        .args(Some("kscreen"))
        .args(Some("konsole"))
        .args(Some("sddm"))
        .args(Some("kde-plasma-desktop"))
        .args(Some("plasma-nm"))
        .args(Some("plasma-workspace-wayland"))
        .args(Some("-y"))
        .status()
        .expect("error removing all graphical environments");

    Command::new("systemctl")
        .args(Some("disable"))
        .args(Some("gdm"))
        .args(Some("-f"))
        .status()
        .expect("Error disabling gdm on startup");

    Command::new("systemctl")
        .args(Some("disable"))
        .args(Some("lightdm"))
        .args(Some("-f"))
        .status()
        .expect("Error disabling lightdm on startup");

    Command::new("systemctl")
        .args(Some("disable"))
        .args(Some("sddm"))
        .args(Some("-f"))
        .status()
        .expect("Error disabling sddm on startup");

}